name: Pre-Release

on:
  release:
    # See: https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#release
    # > Note: The prereleased type will not trigger for pre-releases published from draft releases, but the published type will trigger. If you want a workflow to run when stable and pre-releases publish, subscribe to published instead of released and prereleased.
    # So, if you Draft a prerelease apparently publishing is then impossible. 
    # I believe the workaround is to re-create the pre-release against the same tag
    types: [prereleased]

jobs:
  publish_pre_release:
    runs-on: ubuntu-latest
    name: TODO
    steps:
      - name: Enforce SemVer for pre-release
        id: enforce_semver
        uses: NetChris/semver-pre-release@v0
      - name: SemVer Echo
        id: semver_echo
        run: |
          echo semver_version:          ${{ steps.enforce_semver.outputs.semver_version }}
          echo major_version:           ${{ steps.enforce_semver.outputs.major_version }}
          echo minor_version:           ${{ steps.enforce_semver.outputs.minor_version }}
          echo patch_version:           ${{ steps.enforce_semver.outputs.patch_version }}
          echo pre_release_version:     ${{ steps.enforce_semver.outputs.pre_release_version }}
          echo build_metadata:          ${{ steps.enforce_semver.outputs.build_metadata }}
          echo major_minor_version:     ${{ steps.enforce_semver.outputs.major_minor_version }}
          echo fallback_version:        ${{ steps.enforce_semver.outputs.fallback_version }}
          echo dotnet_assembly_version: ${{ steps.enforce_semver.outputs.dotnet_assembly_version }}
          echo nuget_version:           ${{ steps.enforce_semver.outputs.nuget_version }}
